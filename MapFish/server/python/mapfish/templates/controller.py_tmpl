# 
# Copyright (C) 2007-2008  Camptocamp
#  
# This file is part of MapFish
#  
# MapFish is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#  
# MapFish is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public License
# along with MapFish.  If not, see <http://www.gnu.org/licenses/>.
#

import logging

from sqlalchemy.sql import and_

from ${basePkg}.lib.base import *
from ${basePkg}.model.${modName} import ${modelTabObj}, ${modelClass}

from mapfish.pfpfeature import FeatureCollection
from mapfish.plugins.search import Search

import geojson

log = logging.getLogger(__name__)

class ${contrClass}Controller(BaseController):
    def show(self):
        search = Search(
            ${modelTabObj}.c.${idColName},
            ${modelTabObj}.c.${geomColName},
            ${epsg}, '${units}')
        expr = search.buildExpression(request)
        #
        # CUSTOM CODE GOES HERE
        #
        # Here you can augment the expression with your own app-specific
        # filters.
        #
        # Example:
        # if 'name' in request.params:
        #     e = model.summits_table.c.name.op('ilike')('%' + request.params['name']  + '%')
        #     # update query expression
        #     if expr is not None:
        #         expr = and_(expr, e)
        #     else:
        #         expr = e
        #
        objects = search.query(
            model.Session, ${modelClass}, ${modelTabObj}, expr)
        if len(objects) != 0:
            return geojson.dumps(
                FeatureCollection([f.toFeature() for f in objects]))
